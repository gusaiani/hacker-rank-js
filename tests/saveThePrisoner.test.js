const saveThePrisoner = require('../saveThePrisoner')

test('A saveThePrisoner test', () => {
  expect(saveThePrisoner(5, 2, 1)).toEqual(2)
  expect(saveThePrisoner(5, 2, 2)).toEqual(3)
  expect(saveThePrisoner(7, 19, 2)).toEqual(6)
  expect(saveThePrisoner(3, 7, 3)).toEqual(3)
  expect(saveThePrisoner(987208066, 992914997, 534359308)).toEqual(540066238)
})

const examples = `
987208066 992914997 534359308
829184434 845745270 142961264
64404787 990499813 50168775
973232645 986655633 434408426
650191283 693567669 248488463
387963979 393752728 124575669
386466373 819226471 169682152
567500739 588381573 190420213
110961316 653458893 101526651
586150889 857180048 295453561
127704787 193861372 30977470
501788512 623729607 40210994
155634995 840192364 67379577
205803769 275201320 38320173
465961192 558381223 172699145
14832220 415810197 10318522
543780156 962564973 467116054
498310524 705771963 14814365
108747827 279686934 76826909
987003690 989591835 514794082
307275380 659137273 292765922
126119867 343855730 30079437
520635724 620403066 35568703
988730256 998280807 119051985
85370549 942273400 35425691
121914462 882709797 34116370
16763475 68704330 10863644
423956193 809960449 369196359
284529005 779281087 255606461
687599395 919752746 149741813
41913518 872858186 944637
334679439 771705685 161826417
100114296 240933740 29923974
697590171 710271067 89040101
657888763 725325362 544794877
778685002 820552414 573284626
300459219 960008544 239663360
462194138 721685845 163473478
831390496 966320275 289029203
224042313 236306846 6607196
373784125 801746300 96239325
113353423 354727264 50251925
944538718 953259162 115648701
875491355 922431341 235809478
964531455 981986700 125165878
677620209 716269467 63235573
882106188 891674932 243031063
121769547 308646770 98937299
747437163 859305117 172137684
720373213 893899779 238530117
175065034 252652799 60775844
271304358 462245545 13431713
987727403 994128383 181105520
844969891 933306956 215457691
684278431 733370709 241354140
591023570 801695546 199572206
539636121 711686526 192467527
399395912 466459974 268802426
594259133 785796889 547355579
113787494 501178282 23584231
645580389 790357766 328746984
231551334 917827865 56585504
58896120 791796173 6076716
80245394 451735569 50190463
140672975 337114555 66996630
603100329 662293819 56178774
246212456 285157103 207673947
517952224 956292782 274738009
438062826 784850994 336987929
985418404 992773412 329146373
236577622 354216790 235558841
565324606 859200821 430395078
85012777 724976857 64092363
592697204 683695493 328405538
963869242 979122416 420304902
868093049 981852921 15389621
130472480 676172895 9119957
190662778 976359289 26128429
465400787 619961697 315082344
407156371 468850462 97303806
736302744 979785432 269182242
480421290 676955249 322855691
910816367 940172733 52003404
867731729 966587082 535545596
196137266 651136392 101460748
432827761 648989516 404820706
316310431 398943687 221910085
91254099 139493801 46359641
452021974 778452311 400192715
550422243 581653974 461886806
647726048 713813950 464706422
242030129 382843401 86757411
564885819 634028604 417543518
527705589 585258767 25873512
63251184 852487223 47757877
17228284 28557251 5346379
287704511 903048419 110994298
825925026 852218730 529759386
2358404 725790225 893285
402551118 481507417 312646264
`

const answers = `
540066238
159522099
10191995
447831413
291864848
130364417
215975876
211301046
89217647
566482719
97134054
162152088
129396965
107717723
265119175
10826558
342120714
222275803
30270361
517382226
30077054
121695432
135336044
128602535
38623051
63424932
12514073
331244421
181300532
381895163
35532462
264173223
70629121
101720996
612231475
615152037
298294246
422965184
423958981
18871728
150417374
64918919
124369144
282749463
142621122
101884830
252599806
42275427
284005637
412056682
138363608
204372899
187506499
303794755
290446417
410244181
364517931
335866487
144634201
69612536
473524360
48208032
32223328
20453667
122765234
115372263
406137
195126342
245713270
336501380
116620386
158946686
23954226
419403826
435558075
129149492
32930451
49173827
4242466
158997896
512664929
38968359
81359769
634400948
164185341
188154699
304543340
3345243
274601077
493118536
530794323
227570682
486686302
83426689
14728523
16675345
150929183
556053089
295077
391602562
`

const examplesArray = examples.trim().split('\n')
const answersArray = answers.trim().split('\n')

examplesArray.forEach((line, index) => {
  const argsArray = line.split(' ')
  const prisoners = parseInt(argsArray[0])
  const candies = parseInt(argsArray[1])
  const startAt = parseInt(argsArray[2])

  test(`A saveThePrisoner test with ${prisoners}, ${candies} and ${startAt} which should return ${
    answersArray[index]
  }`, () => {
    expect(saveThePrisoner(prisoners, candies, startAt)).toEqual(
      parseInt(answersArray[index]),
    )
  })
})
